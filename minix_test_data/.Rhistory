wp0 <- get.weibull.analysis(d0, line = 'lm', line_color = "turquoise4")
confirmedBugs.cox <- coxph(Surv(TTF) ~ 1, data = confirmedBugs)
summary(confirmedBugs.cox)
cox1 <- survfit(coxph(Surv(TTF) ~ 1, data = confirmedBugs))
names(cox1)
lines(cox1$time, cox1$surv, lty=2, type='s')
plot(cox1$time, cox1$surv, lty=2, type='s')
lines(cox1$time, cox1$upper, lty=2, type='s')
lines(cox1$time, cox1$lower, lty=2, type='s')
confirmedBugs.km
confirmedBugs.km + ggplot(data = cox1, aes(cox1$time,cox1$surv))
ggsurvplot(cox1, conf.int = TRUE)
ggsurvplot(cox1, conf.int = TRUE, fun = "event"color = "strata", ggtheme = theme_gray())
ggsurvplot(cox1, conf.int = TRUE, fun = "event",color = "strata", ggtheme = theme_gray())
cox.gg <- ggsurvplot(cox1, conf.int = TRUE, fun = "event",color = "strata", ggtheme = theme_gray())
confirmedBugs.gg$plot + cox.gg$plot
vis1 <- confirmedBugs.gg
vis2 <- cox.gg
vis3 <- rbind(confirmedBugs.gg, cox.gg)
vis1
vis2
vis3
ggsurvplot(c(confirmedBugs.Surv, cox1))
ggsurvplot(c(confirmedBugs.Surv, cox1) )
confirmedBugs.gg <- ggsurvplot(c(confirmedBugs.Surv, cox1), fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = "black")
ggcoxadjustedcurves(cox1)
confirmedBugs.cox <- survfit(coxph(Surv(TTF) ~ 1, data = confirmedBugs))
names(confirmedBugs.cox)
names(confirmedBugs.Surv)
confirmedBugs.gg <- ggsurvplot(c(confirmedBugs.Surv, confirmedBugs.cox), fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = "black")
confirmedBugs.gg <- ggsurvplot(confirmedBugs.cox, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = "black")
confirmedBugs.gg <- ggsurvplot(confirmedBugs.Surv, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = "black")
confirmedBugs.gg <- ggsurvplot(confirmedBugs.cox, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = "black")
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.Surv, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = "black")
confirmedBugs.gg
list(rm = list(vis1, vis2, vis3))
confirmedList <- list(km = confirmedBugs.Surv, cox = confirmedBugs.cox)
ggsurvplot(confirmedList, data = confirmedBugs)
ggsurvplot(confirmedList, data = confirmedBugs, combine = TRUE, fun = "event")
markedData <- read.xlsx("github_data/filter_user_dcb314.xlsx", 1, startRow = 1, colIndex = c(1, 2))
merged_data <- merge(github_data, markedData, by = 'Issue_Num')
confirmedBugs <- merged_data[!(merged_data$Marked %in% 0), ]
# Sort by date issue was opened, then calculate the cumulative failures
# Here the data is split according to the date v. 3.4 was released
confirmedBugs <- confirmedBugs[order(confirmedBugs$Opened_Date), ]
# confirmedBugs_1 <- confirmedBugs[1:38,]
# confirmedBugs_2 <- confirmedBugs[39:83,]
confirmedBugs_1 <- confirmedBugs[1:30,]
confirmedBugs_2 <- confirmedBugs[31:62,]
confirmedBugs$TTF <- unlist(by(confirmedBugs, confirmedBugs$Marked, function(x) difftime(x$Opened_Date, x$Opened_Date[1], units= "hours")))
confirmedBugs_1$TTF <- unlist(by(confirmedBugs_1, confirmedBugs_1$Marked, function(y) difftime(y$Opened_Date, y$Opened_Date[1], units= "hours")))
confirmedBugs_2$TTF <- unlist(by(confirmedBugs_2, confirmedBugs_2$Marked, function(z) difftime(z$Opened_Date, z$Opened_Date[1], units= "hours")))
#Calculate MTBF (custom functions)
confirmedBugs$TBFs <- make.interFailures(confirmedBugs$TTF)
confirmedBugs$MTBF <- make.MTBF(confirmedBugs$TBFs)
githubMTBFs <- ggplot(data=confirmedBugs, aes(TTF, MTBF))+ggtitle("Cumulative MTBF (GitHub Data)")+ labs(x ="SYSTEM AGE (hrs)", y = "MTBF (hrs)") + theme(axis.title = element_text(size=22), axis.text=element_text(size=16)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24))
# ============ Weibull plots
# All Github data
# drop the 0 and skew point
# d0 <- data.frame(TTF = confirmedBugs$TTF[c(-1,-2)])
d0 <- data.frame(TTF = confirmedBugs$TTF[c(-1)])
fit_d0 <- fitdistr(d0$TTF, "weibull")
confirmedBugs.Surv <- survfit(Surv(TTF) ~ 1, data = confirmedBugs)
confirmedBugs.cox <- survfit(coxph(Surv(TTF) ~ 1, data = confirmedBugs))
confirmedBugs.List <- list(km = confirmedBugs.Surv, cox = confirmedBugs.cox)
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = "black")
confirmedBugs.km <- confirmedBugs.gg$plot + stat_function(fun = pweibull, color = "turquoise4", size = 1, args = list(fit_d0$estimate[1], fit_d0$estimate[2])) + ggtitle("ALL GITHUB MINIX DATA (v. 3.3 ~ 3.4)") + labs(subtitle = "CUMULATIVE DIST. FUNCTION vs. TIME", x ="TIME (s)", y = "CDF") + theme(plot.title = element_text(size = 25,
hjust = .5,
face = "bold",
color = "black"),
plot.subtitle = element_text(size = 13,
hjust = .5,
#face = "italic",
color = "black"),
axis.title.y = element_text(size = 15,
face = "bold",
color = "black"),
axis.title.x = element_text(size = 15,
face = "bold",
color = "black"),axis.text.x = element_text(size = 10,
color = "black"),
plot.margin = unit(c(.5,.5,.5,1),"cm"))
wp0 <- get.weibull.analysis(d0, line = 'lm', line_color = "turquoise4")
confirmedBugs.km
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none")#, palette = "black")
confirmedBugs.km <- confirmedBugs.gg$plot + stat_function(fun = pweibull, color = "turquoise4", size = 1, args = list(fit_d0$estimate[1], fit_d0$estimate[2])) + ggtitle("ALL GITHUB MINIX DATA (v. 3.3 ~ 3.4)") + labs(subtitle = "CUMULATIVE DIST. FUNCTION vs. TIME", x ="TIME (s)", y = "CDF") + theme(plot.title = element_text(size = 25,
hjust = .5,
face = "bold",
color = "black"),
plot.subtitle = element_text(size = 13,
hjust = .5,
#face = "italic",
color = "black"),
axis.title.y = element_text(size = 15,
face = "bold",
color = "black"),
axis.title.x = element_text(size = 15,
face = "bold",
color = "black"),axis.text.x = element_text(size = 10,
color = "black"),
plot.margin = unit(c(.5,.5,.5,1),"cm"))
confirmedBugs.km
ggsurvplot(confirmedList, data = confirmedBugs, combine = TRUE, fun = "event")
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = "black", combine = TRUE)
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, data = confirmedBugs, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = "black", combine = TRUE)
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = c("black", "red"), combine = TRUE)
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = c("black", "black"), combine = TRUE, lty.est=c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = c("black", "black"), combine = TRUE, labels = c('Male', 'Female'))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = c("black", "black"), combine = TRUE, lty.est=c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "none", palette = c("black", "black"), combine = TRUE, linetype = c(1,2), legend = "top" )
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "top", palette = c("black", "black"), combine = TRUE, linetype = c(1,2), legend = "top" )
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "top", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.km <- confirmedBugs.gg$plot + stat_function(fun = pweibull, color = "turquoise4", size = 1, args = list(fit_d0$estimate[1], fit_d0$estimate[2])) + ggtitle("ALL GITHUB MINIX DATA (v. 3.3 ~ 3.4)") + labs(subtitle = "CUMULATIVE DIST. FUNCTION vs. TIME", x ="TIME (s)", y = "CDF") + theme(plot.title = element_text(size = 25,
hjust = .5,
face = "bold",
color = "black"),
plot.subtitle = element_text(size = 13,
hjust = .5,
#face = "italic",
color = "black"),
axis.title.y = element_text(size = 15,
face = "bold",
color = "black"),
axis.title.x = element_text(size = 15,
face = "bold",
color = "black"),axis.text.x = element_text(size = 10,
color = "black"),
plot.margin = unit(c(.5,.5,.5,1),"cm"))
confirmedBugs.km
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = c(theme_gray(), theme_gray()), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = c(theme_gray(), theme_gray), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_gray(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg$plot
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, color = "strata", ggtheme = theme_grey(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = c(TRUE, FALSE), color = "strata", ggtheme = theme_grey(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ggtheme = theme_grey(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ggtheme = theme_classic(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ggtheme = theme_void(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ,conf.int.fill = c("light gray", "light gray"), ggtheme = theme_void(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ,conf.int.fill = "light gray", ggtheme = theme_void(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ,conf.int.fill = "gray94", ggtheme = theme_void(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ,conf.int.fill = c("gray94","gray94") , ggtheme = theme_void(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ,conf.int.fill = "gray93", ggtheme = theme_void(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ,conf.int.fill = c("gray94","gray94") , ggtheme = theme_void(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ,conf.int.fill = "gray93", ggtheme = theme_void(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, , ggtheme = theme_grey(), legend = "right", palette = c("black", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, , ggtheme = theme_grey(), legend = "right", palette = c("grey94", "black"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, , ggtheme = theme_grey(), legend = "right", palette = c("grey", "grey"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, , ggtheme = theme_grey(), legend = "right", palette = c("grey40", "grey40"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, , ggtheme = theme_grey(),ggtheme = theme_grey(), legend = "right", palette = c("grey40", "grey40"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, ,legend = "right", palette = c("grey40", "grey40"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE, , ggtheme = theme_grey(),ggtheme = theme_grey(), legend = "right", palette = c("grey40", "grey40"), combine = TRUE, linetype = c(1,2))+ theme(plot.title = element_text(size = 25,
hjust = .5,
face = "bold",
color = "black"),
plot.subtitle = element_text(size = 13,
hjust = .5,
#face = "italic",
color = "black"),
axis.title.y = element_text(size = 15,
face = "bold",
color = "black"),
axis.title.x = element_text(size = 15,
face = "bold",
color = "black"),axis.text.x = element_text(size = 10,
color = "black"),
plot.margin = unit(c(.5,.5,.5,1),"cm"))
confirmedBugs.gg <- ggsurvplot(confirmedBugs.List, fun = "event", conf.int = TRUE,legend = "right", palette = c("grey40", "grey40"), combine = TRUE, linetype = c(1,2))
confirmedBugs.gg$plot + + theme(plot.title = element_text(size = 25,
hjust = .5,
face = "bold",
color = "black"),
plot.subtitle = element_text(size = 13,
hjust = .5,
#face = "italic",
color = "black"),
axis.title.y = element_text(size = 15,
face = "bold",
color = "black"),
axis.title.x = element_text(size = 15,
face = "bold",
color = "black"),axis.text.x = element_text(size = 10,
color = "black"),
plot.margin = unit(c(.5,.5,.5,1),"cm"))
confirmedBugs.km
confirmedBugs.gg$plot + theme(plot.title = element_text(size = 25,
hjust = .5,
face = "bold",
color = "black"),
plot.subtitle = element_text(size = 13,
hjust = .5,
#face = "italic",
color = "black"),
axis.title.y = element_text(size = 15,
face = "bold",
color = "black"),
axis.title.x = element_text(size = 15,
face = "bold",
color = "black"),axis.text.x = element_text(size = 10,
color = "black"),
plot.margin = unit(c(.5,.5,.5,1),"cm"))
confirmedBugs.km
confirmedBugs.km <- confirmedBugs.gg$plot + theme(plot.title = element_text(size = 25,
hjust = .5,
face = "bold",
color = "black"),
plot.subtitle = element_text(size = 13,
hjust = .5,
#face = "italic",
color = "black"),
axis.title.y = element_text(size = 15,
face = "bold",
color = "black"),
axis.title.x = element_text(size = 15,
face = "bold",
color = "black"),axis.text.x = element_text(size = 10,
color = "black"),
plot.margin = unit(c(.5,.5,.5,1),"cm"))
confirmedBugs.km
head(colon)
fit1.kaplan <- survfit(Surv(time, status) ~ sex, data = colon)
fit1.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon))
fit2.kaplan <- survfit(Surv(time, status) ~ adhere, data = colon)
fit2.cox <- survfit(coxph(Surv(time, status) ~ adhere, data = colon))
fits.sex <- list(sex.km = fit1.kaplan, sex.cox = fit1.cox)
fits.adhere <- list(adhere.km = fit2.kaplan, adhere.cox = fit2.cox)
ggsurv.sex <- ggsurvplot(fits.sex, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco"), combine = TRUE, linetype = c(1,2))
ggsurv.sex <- ggsurvplot(fits.sex, colon, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco"), combine = TRUE, linetype = c(1,2))
ggsurv.sex <- ggsurvplot(fits.sex, colon, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco", "jco", "jco"), combine = TRUE, linetype = c(1,2))
ggsurv.sex <- ggsurvplot(fits.sex, colon, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco"), combine = TRUE, linetype = c(1,2,3))
ggsurv.sex$plot
ggsurv.sex <- ggsurvplot(fits.adhere, colon, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco"), combine = TRUE)
ggsurv.sex$plot
fit1.cox1 <- survfit(coxph(Surv(time, status) ~ sex=0, data = colon))
head(colon$sex)
head(colon$time)
fit1.cox1 <- survfit(coxph(Surv(sex) ~ 1, data = colon))
fits.sex <- list(sex.km = fit1.kaplan, sex.cox = fit1.cox, sex.cox1 = fit1.cox1)
ggsurv.sex <- ggsurvplot(fits.sex, colon, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco"), combine = TRUE, linetype = c(1,2,3))
ggsurv.sex <- ggsurvplot(fits.sex, colon, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco"), combine = TRUE, linetype = c(1,2,3,4))
ggsurv.sex$plot
fit1.kaplan <- survfit(Surv(time, status) ~ sex, data = colon)
fit2.kaplan <- survfit(Surv(time, status) ~ adhere, data = colon)
fits.all <- list(sex.km = fit1.kaplan, adhere.km = fit2.cox)
ggsurv.fits <- ggsurvplot(fits.all, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco"), combine = TRUE, linetype = c(1,2, 1, 2))
ggsurv.fits
colon.sex0 <- colon[!(colon$sex %in% 1), ]
View(colon.sex0)
colon.sex0 <- colon[!(colon$sex %in% 1), ]
colon.sex1 <- colon[!(colon$sex %in% 0), ]
sex0.kaplan <- survfit(Surv(time, status) ~ sex, data = colon)
sex0.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex0)
sex1.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex1)
sex0.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex0))
sex1.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex1))
sex0.fits <- list(Kaplan = sex0.kaplan, Cox = sex0.cox)
ggsurv.sex0 <- ggsurvplot(sex0.fits, fun = "event", conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata")
ggsurv.sex0
ggsurv.sex0 <- ggsurvplot(sex0.fits, fun = "event", conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
ggsurv.sex0
ggsurv.sex1 <- ggsurvplot(sex1.fits, fun = "event", conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex1.fits <- list(Kaplan = sex1.kaplan, Cox = sex1.cox)
ggsurv.sex1 <- ggsurvplot(sex1.fits, fun = "event", conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
ggsurv.sex0
ggsurv.sex1
ggsurv.sex0 <- ggsurvplot(sex0.fits, fun = "event", ggtheme = theme_gray(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
ggsurv.sex0  + ggtitle("ALL GITHUB MINIX DATA (v. 3.3 ~ 3.4)") + labs(subtitle = "CUMULATIVE DIST. FUNCTION vs. TIME", x ="TIME (s)", y = "CDF")
ggsurv.sex0  + ggtitle("THIS IS NOT theme_grey()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
colon.sex0 <- colon[!(colon$sex %in% 1), ]
colon.sex1 <- colon[!(colon$sex %in% 0), ]
sex0.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex0)
sex0.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex0))
sex0.fits <- list(Kaplan = sex0.kaplan, Cox = sex0.cox)
sex1.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex1)
sex1.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex1))
sex1.fits <- list(Kaplan = sex1.kaplan, Cox = sex1.cox)
all.fits <- list(Kaplan.0 = sex0.kaplan, Cox.0 = sex0.cox, Kaplan.1 = sex1.kaplan, Cox.1 = sex1.cox)
ggsurv.sex0 <- ggsurvplot(sex0.fits, fun = "event", ggtheme = theme_gray(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex0.plot <- ggsurv.sex0 + ggtitle("THIS IS NOT theme_gray()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
ggsurv.sex1 <- ggsurvplot(sex1.fits, fun = "event", ggtheme = theme_dark(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex1.plot <- ggsurv.sex1 + ggtitle("THIS IS NOT theme_dark()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
ggsurv.all <- ggsurvplot(all.fits, fun = "event", ggtheme = theme_void(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2, 1, 2), palette = "strata", censor = FALSE)
all.plot <- ggsurv.all + ggtitle("THIS IS NOT theme_void()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
all.plot
sex0.plot
sex1.plot
kaplan.sex <- survfit(Surv(time, status) ~ sex, data = colon)
cox.sex <- survfit(coxph(Surv(time, status) ~ sex, data = colon))
fits.sex <- list(sex.km = fit1.kaplan, sex.cox = fit1.cox)
ggsurv.sex <- ggsurvplot(fits.sex, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco"), combine = TRUE, linetype = c(1,2,3))
kaplan.sex <- survfit(Surv(time, status) ~ sex, data = colon)
cox.sex <- survfit(coxph(Surv(time, status) ~ sex, data = colon))
fits.sex <- list(sex.km = fit1.kaplan, sex.cox = fit1.cox)
ggsurv.sex <- ggsurvplot(fits.sex, colon, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco"), combine = TRUE, linetype = c(1,2,3))
sex.plot <- ggsurv.sex + ggtitle("THIS IS NOT WHAT I WANTED") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
sex.plot
session_info()
devtools::session_info()
sessionInfo()
kaplan.sex <- survfit(Surv(time, status) ~ sex, data = colon)
cox.sex <- survfit(coxph(Surv(time, status) ~ sex, data = colon))
fits.sex <- list(sex.km = kaplan.sex, sex.cox = cox.sex)
ggsurv.sex <- ggsurvplot(fits.sex, colon, fun = "event", conf.int = TRUE, legend = "right", palette = c("jco"), combine = TRUE, linetype = c(1,2,3))
sex.plot <- ggsurv.sex + ggtitle("THIS IS NOT WHAT I WANTED") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
sex.plot
library(xlsx)
library(ggplot2)
library(ggpubr)
library(survMisc)
library(survival)
library(survminer)
library(data.table)
library(grid)
library(gridExtra)
library(XML)
library(RCurl)
library(taRifx)
library(stringr)
library("scales")
library ("MASS")
source("misc.R")
source("weibull.R")
# Split this data (explained below)
colon.sex0 <- colon[!(colon$sex %in% 1), ]
colon.sex1 <- colon[!(colon$sex %in% 0), ]
# Create Kaplan-Maier and Cox Proportional Hazard estimate where sex = 0
sex0.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex0)
sex0.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex0))
# Make a list for comparison
sex0.fits <- list(Kaplan = sex0.kaplan, Cox = sex0.cox)
# Same, but where sex = 1
sex1.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex1)
sex1.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex1))
# Make a list for comparison
sex1.fits <- list(Kaplan = sex1.kaplan, Cox = sex1.cox)
# Compare all
all.fits <- list(Kaplan.0 = sex0.kaplan, Cox.0 = sex0.cox, Kaplan.1 = sex1.kaplan, Cox.1 = sex1.cox)
# Plots
ggsurv.sex0 <- ggsurvplot(sex0.fits, fun = "event", ggtheme = theme_gray(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex0.plot <- ggsurv.sex0 + ggtitle("THIS IS NOT theme_gray()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
ggsurv.sex1 <- ggsurvplot(sex1.fits, fun = "event", ggtheme = theme_dark(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex1.plot <- ggsurv.sex1 + ggtitle("THIS IS NOT theme_dark()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
ggsurv.all <- ggsurvplot(all.fits, fun = "event", ggtheme = theme_void(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2, 1, 2), palette = "strata", censor = FALSE)
all.plot <- ggsurv.all + ggtitle("THIS IS NOT theme_void()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
sex0.plot
sex1.plot
install.packages("survminer")
library(xlsx)
library(ggplot2)
library(ggpubr)
library(survMisc)
library(survival)
library(survminer)
library(data.table)
library(grid)
library(gridExtra)
library(XML)
library(RCurl)
library(taRifx)
library(stringr)
library("scales")
library ("MASS")
source("misc.R")
source("weibull.R")
# Split this data (explained below)
colon.sex0 <- colon[!(colon$sex %in% 1), ]
colon.sex1 <- colon[!(colon$sex %in% 0), ]
# Create Kaplan-Maier and Cox Proportional Hazard estimate where sex = 0
sex0.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex0)
sex0.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex0))
# Make a list for comparison
sex0.fits <- list(Kaplan = sex0.kaplan, Cox = sex0.cox)
# Same, but where sex = 1
sex1.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex1)
sex1.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex1))
# Make a list for comparison
sex1.fits <- list(Kaplan = sex1.kaplan, Cox = sex1.cox)
# Compare all
all.fits <- list(Kaplan.0 = sex0.kaplan, Cox.0 = sex0.cox, Kaplan.1 = sex1.kaplan, Cox.1 = sex1.cox)
# Plots
ggsurv.sex0 <- ggsurvplot(sex0.fits, fun = "event", ggtheme = theme_gray(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex0.plot <- ggsurv.sex0 + ggtitle("THIS IS NOT theme_gray()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
ggsurv.sex1 <- ggsurvplot(sex1.fits, fun = "event", ggtheme = theme_dark(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex1.plot <- ggsurv.sex1 + ggtitle("THIS IS NOT theme_dark()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
ggsurv.all <- ggsurvplot(all.fits, fun = "event", ggtheme = theme_void(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2, 1, 2), palette = "strata", censor = FALSE)
all.plot <- ggsurv.all + ggtitle("THIS IS NOT theme_void()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
install.packages("survminer")
rm(list = ls())
install.packages("survminer")
library(xlsx)
library(ggplot2)
library(ggpubr)
library(survMisc)
library(survival)
library(survminer)
library(data.table)
library(grid)
library(gridExtra)
library(XML)
library(RCurl)
library(taRifx)
library(stringr)
library("scales")
library ("MASS")
source("misc.R")
source("weibull.R")
# Split this data (explained below)
colon.sex0 <- colon[!(colon$sex %in% 1), ]
colon.sex1 <- colon[!(colon$sex %in% 0), ]
# Create Kaplan-Maier and Cox Proportional Hazard estimate where sex = 0
sex0.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex0)
sex0.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex0))
# Make a list for comparison
sex0.fits <- list(Kaplan = sex0.kaplan, Cox = sex0.cox)
# Same, but where sex = 1
sex1.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex1)
sex1.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex1))
# Make a list for comparison
sex1.fits <- list(Kaplan = sex1.kaplan, Cox = sex1.cox)
# Compare all
all.fits <- list(Kaplan.0 = sex0.kaplan, Cox.0 = sex0.cox, Kaplan.1 = sex1.kaplan, Cox.1 = sex1.cox)
# Plots
ggsurv.sex0 <- ggsurvplot(sex0.fits, fun = "event", ggtheme = theme_gray(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex0.plot <- ggsurv.sex0 + ggtitle("THIS IS NOT theme_gray()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
ggsurv.sex1 <- ggsurvplot(sex1.fits, fun = "event", ggtheme = theme_dark(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex1.plot <- ggsurv.sex1 + ggtitle("THIS IS NOT theme_dark()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
ggsurv.all <- ggsurvplot(all.fits, fun = "event", ggtheme = theme_void(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2, 1, 2), palette = "strata", censor = FALSE)
all.plot <- ggsurv.all + ggtitle("THIS IS NOT theme_void()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
sex0.plot
sex1.plot
all.plot
ggsurv.all <- ggsurvplot(all.fits, fun = "event", ggtheme = theme_void(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2, 1, 2), palette = "strata", censor = FALSE)
ggsurv.all
ggsurv.all <- ggsurvplot(all.fits, fun = "event", ggtheme = theme_grey(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2, 1, 2), palette = "strata", censor = FALSE)
ggsurv.all
install.packages("devtools")
devtools::install_github("kassambara/survminer")
install.packages('dplyr', 'tidyr', 'purrr', 'tibble')
install.packages('dplyr', 'purrr', 'tibble')
install.packages('dplyr', 'tibble')
install.packages('tibble')
install.packages("tibble")
install.packages('dplyr', 'tidyr', 'purrr')
install.packages("dplyr", "tidyr", "purrr")
devtools::install_github("hadley/tidyr")
install.packages("dplyr", "tidyr", "purrr", "tibble")
devtools::install_github("hadley/tidyr")
devtools::install_github("kassambara/survminer")
install.packages("scales")
devtools::install_github("kassambara/survminer")
library(xlsx)
library(ggplot2)
library(ggpubr)
library(survMisc)
library(survival)
library(survminer)
library(data.table)
library(grid)
library(gridExtra)
library(XML)
library(RCurl)
library(taRifx)
library(stringr)
library("scales")
library ("MASS")
source("misc.R")
source("weibull.R")
# Split this data (explained below)
colon.sex0 <- colon[!(colon$sex %in% 1), ]
colon.sex1 <- colon[!(colon$sex %in% 0), ]
# Create Kaplan-Maier and Cox Proportional Hazard estimate where sex = 0
sex0.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex0)
sex0.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex0))
# Make a list for comparison
sex0.fits <- list(Kaplan = sex0.kaplan, Cox = sex0.cox)
# Same, but where sex = 1
sex1.kaplan <- survfit(Surv(time, status) ~ sex, data = colon.sex1)
sex1.cox <- survfit(coxph(Surv(time, status) ~ sex, data = colon.sex1))
# Make a list for comparison
sex1.fits <- list(Kaplan = sex1.kaplan, Cox = sex1.cox)
# Compare all
all.fits <- list(Kaplan.0 = sex0.kaplan, Cox.0 = sex0.cox, Kaplan.1 = sex1.kaplan, Cox.1 = sex1.cox)
# Plots
ggsurv.sex0 <- ggsurvplot(sex0.fits, fun = "event", ggtheme = theme_gray(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex0.plot <- ggsurv.sex0 + ggtitle("THIS IS NOT theme_gray()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
ggsurv.sex1 <- ggsurvplot(sex1.fits, fun = "event", ggtheme = theme_dark(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2), palette = "strata", censor = FALSE)
sex1.plot <- ggsurv.sex1 + ggtitle("THIS IS NOT theme_dark()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
ggsurv.all <- ggsurvplot(all.fits, fun = "event", ggtheme = theme_void(), conf.int = TRUE, legend = "right", combine = TRUE, linetype = c(1, 2, 1, 2), palette = "strata", censor = FALSE)
all.plot <- ggsurv.all + ggtitle("THIS IS NOT theme_void()") + labs(subtitle = "but I wish it was...", x ="TIME", y = "CDF")
sex0.plot
sex1.plot
all.plot
